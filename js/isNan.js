/*
 * 사람은 당연스럽게 수를 10진수로 읽지만, 컴퓨터는 2진수가 기본이다.
 * 때문에 코드를 작성하다보면 10진수 2진수를 자유자재로 다뤄야할 필요가 있고,
 * 이를 변환하다보면 소수점이 생긱게 마련이다. 이 소수점이 까다로운 문제다.
 * js 에서는 IEEE 754 라는 표준을 사용한다.
 * 부동소수점 => 떠돌이 소주점 */

console.log(Number.MAX_SAFE_INTEGER); // 9007199254740991 (js 에서 나타낼수 있는 가장 큰 정수)

/*
 * isNaN (NaN => Not a Number)
 * 사실 숫자인지 아닌지 판별하는 방법은 많지만(typeof) 굳이 이렇게 isNaN 을 만들어놓은 이유는
 * js 에서 숫자를 다루는게 까다롭다고 인정하기 때문이다.  */

console.log(isNaN(123)); // false => 숫자가 아니지 않다. => 숫자다.

console.log(isNaN(123 + "테스트")); // true
// => 이제 부터가 헷갈리다.
console.log(Number.isNaN(123 + "테스트")); // false => 왜 false 가 나오는지 이해가 안됨....???

// js 측에서 위와 같은 이슈를 인정하고 es2015부터 isNaN 보다 더 엄격한 검사가 나온거다.
// isNaN => 느슨한 검사 상세 검사 해보면 파라미터 타입이 넘버이다.
// Number.isNaN => 엄격한 검사 상세 검사 해보면 파라미터 타입이 unknown 이다.

/*
 * isNaN 함수는 파라미터가 NaN 인지를 확인하는 함수이고,
 * Number 가 아닌 값이 들어오면 강제로 Number 로 변환해서 확인을 한다.
 * 파라미터를 암묵적으로 Number로 형변환하는 isNaN 대신에 형변환 없는 Number.isNaN 함수를 사용하는게 더 좋다.
 * */
